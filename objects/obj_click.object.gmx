<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_click</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>base_scale = 1.0;
click_scale = 0.8;
bonus_scale = 0.4;

scale = base_scale;

x = room_width/2;
y = room_height/2;

image_speed = 0;
image_index = 0;
happy_counter = 0;
happy_stage = 20;
afk = false;
afk_counter = 0;

goal_x = room_width/2;
goal_y = room_height/2;
c = 0;
sun_counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if position_meeting(mouse_x, mouse_y, self) {

    if mouse_check_button_pressed(mb_left) {
        scale = click_scale + image_index * bonus_scale;
        instance_create(mouse_x + random_range(-10, 10), mouse_y + random_range(-10, 10), obj_effect_explosion);
    }
    
    if mouse_check_button_released(mb_left) {
        scale = base_scale + bonus_scale * image_index;
        global.click_count += 1;
        happy_counter = clamp(happy_counter + 1, 0, 4 * happy_stage - 1);
        afk = false;
        afk_counter = 0;
    }

} else {
    scale = base_scale + bonus_scale * image_index;
}


if (not afk) and afk_counter &gt; 360 {
    afk = true;
    afk_counter = 0;
}

if afk {
    happy_counter = clamp(happy_counter - 0.1, 0, 4 * happy_stage - 1);
    scale = base_scale + bonus_scale * image_index;
} else {
    afk_counter += 1;
}

var i = image_index;
image_index = floor(happy_counter / happy_stage);
if i != image_index {

    if i &gt; image_index {
        var s = audio_play_sound(snd_moins, 5, false);
        audio_sound_pitch(s, 1 + (image_index - 1) * 0.2);
    }
    /*
    if i &lt; image_index {
        var s = audio_play_sound(snd_plus, 5, false);
        audio_sound_pitch(s, 1 + (i - 1) * 0.2);
    }
    */
    if image_index &lt; 3 {
        var bg = asset_get_index("bg_main" + string(image_index));
        background_index = bg;
    } 
}

if image_index == 3 {
    sun_counter += 1;
    if sun_counter &gt; 60 {
        if c == 0 then c = 1 else c = 0;
        sun_counter = 0;
    }
    var bg = asset_get_index("bg_main" + string(image_index) + "_" + string(c));
    background_index = bg;
}

image_xscale = lerp(image_xscale, scale, 0.5);
image_yscale = lerp(image_yscale, scale, 0.5);

if (mouse_x &gt; 20 and mouse_x &lt; room_width - 20 &amp;&amp; mouse_y &gt; 20 and mouse_y &lt; room_height - 20) {
    goal_x = mouse_x;
    goal_y = mouse_y;
} else {
    goal_x = room_width/2;
    goal_y = room_height/2;
}

x = lerp(x, goal_x, 0.05);
y = lerp(y, goal_y, 0.05);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//draw_text(40, 40, string(afk_counter));
//draw_text(40, 80, string(happy_counter));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
